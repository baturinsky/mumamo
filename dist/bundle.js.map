{
  "version": 3,
  "sources": ["../src/util.ts", "../src/main.ts"],
  "sourcesContent": ["const maxN = 2 ** 31;\nexport let rng: (n?: number) => number;\n\nexport function RNG(seed?: number): (n?: number) => number {\n  if (seed == null)\n    seed = Math.random();\n  if (0 < seed && seed < 1)\n    seed = ~~(seed * maxN);\n\n  let rngi = (n) => {\n    return (seed = (seed * 16807) % 2147483647) % n;\n  };\n\n  rng = (n) => {\n    return n == -1 ? seed : n == null ? rngi(maxN) / maxN : rngi(n)\n  }\n  return rng;\n}\n\nexport function randomElement(list: any[], gen = rng) {\n  if (!list)\n    return null;\n  let n = gen(list.length);\n  return list[n];\n}\n\nexport function shuffle(arr: any[], rng) {\n\n  let l = arr.length;\n  for (let i = 1; i < l; i++) {\n    let r = rng(l);\n    if (r != i) {\n      [arr[i], arr[r]] = [\n        arr[r], arr[i]];\n    }\n  }\n\n  console.log(arr);\n\n  return arr;\n}\n\nexport const emogiRegEx = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF](?:[\\u200D\\uFE0F][\\uD800-\\uDBFF][\\uDC00-\\uDFFF]){2,}|\\uD83D\\uDC69(?:\\u200D(?:(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67|(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC6F\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3C-\\uDD3E\\uDDD6-\\uDDDF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642])\\uFE0F|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708]))\\uFE0F|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83D\\uDC69\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]))|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\u200D(?:(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDD1-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])?|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])\\uFE0F)/;", "import { emogiRegEx, randomElement, RNG, rng, shuffle } from \"./util\";\r\n\r\ndeclare const S: SVGElement, Board: HTMLDivElement, Table: HTMLDivElement, Pins: HTMLDivElement, StringsPath, StringsShadow;\r\n\r\n{\r\n  type V2 = { x: number, y: number };\r\n\r\n  RNG();\r\n\r\n  const columns = 6;\r\n\r\n  let update = (t: number) => {\r\n    window.requestAnimationFrame(update)\r\n  }\r\n\r\n  update(0);\r\n\r\n  window.onmousemove = e => { }\r\n\r\n  window.onwheel = e => { };\r\n\r\n  function splitEmojis(t){\r\n    return t.split(emogiRegEx).filter(Boolean);\r\n  }\r\n\r\n  const photos = splitEmojis(\"\uD83E\uDD35\uD83D\uDC70\uD83E\uDD31\uD83D\uDC68\u200D\u2695\uFE0F\uD83D\uDC69\u200D\u2695\uFE0F\uD83D\uDC68\u200D\uD83C\uDF93\uD83D\uDC69\u200D\uD83C\uDF93\uD83D\uDC68\u200D\u2696\uFE0F\uD83D\uDC69\u200D\u2696\uFE0F\uD83D\uDC68\u200D\uD83C\uDF3E\uD83D\uDC69\u200D\uD83C\uDF3E\uD83D\uDC68\u200D\uD83C\uDF73\uD83D\uDC69\u200D\uD83C\uDF73\uD83D\uDC68\u200D\uD83D\uDD27\uD83D\uDC69\u200D\uD83D\uDD27\uD83D\uDC68\u200D\uD83C\uDFED\uD83D\uDC69\u200D\uD83C\uDFED\uD83D\uDC68\u200D\uD83D\uDCBC\uD83D\uDC69\u200D\uD83D\uDCBC\uD83D\uDC68\u200D\uD83D\uDD2C\uD83D\uDC69\u200D\uD83D\uDD2C\uD83D\uDC68\u200D\uD83D\uDCBB\uD83D\uDC69\u200D\uD83D\uDCBB\uD83D\uDC68\u200D\uD83C\uDFA4\uD83D\uDC69\u200D\uD83C\uDFA4\uD83D\uDC68\u200D\uD83C\uDFA8\uD83D\uDC69\u200D\uD83C\uDFA8\uD83D\uDC68\u200D\u2708\uFE0F\uD83D\uDC69\u200D\u2708\uFE0F\uD83D\uDC68\u200D\uD83D\uDE80\uD83D\uDC69\u200D\uD83D\uDE80\uD83D\uDC68\u200D\uD83D\uDE92\uD83D\uDC69\u200D\uD83D\uDE92\uD83D\uDC6E\u200D\u2642\uFE0F\uD83D\uDC6E\u200D\u2640\uFE0F\uD83D\uDD75\uFE0F\u200D\u2642\uFE0F\uD83D\uDD75\uFE0F\u200D\u2640\uFE0F\uD83D\uDC82\u200D\u2642\uFE0F\uD83D\uDC82\u200D\u2640\uFE0F\uD83D\uDC77\u200D\u2642\uFE0F\uD83D\uDC77\u200D\u2640\uFE0F\uD83E\uDDD9\u200D\u2640\uFE0F\uD83E\uDDD9\u200D\u2642\uFE0F\uD83E\uDDDA\u200D\u2640\uFE0F\uD83E\uDDDA\u200D\u2642\uFE0F\uD83E\uDDDB\u200D\u2640\uFE0F\uD83E\uDDDB\u200D\u2642\uFE0F\uD83E\uDDDC\u200D\u2640\uFE0F\uD83E\uDDDC\u200D\u2642\uFE0F\uD83E\uDDDD\u200D\u2640\uFE0F\uD83E\uDDDD\u200D\u2642\uFE0F\uD83E\uDDDE\u200D\u2640\uFE0F\uD83E\uDDDE\u200D\u2642\uFE0F\uD83E\uDDDF\u200D\u2640\uFE0F\uD83E\uDDDF\u200D\u2642\uFE0F\");\r\n  const places = splitEmojis(\"\uD83D\uDDFF\uD83D\uDDFD\uD83D\uDDFC\uD83C\uDFF0\uD83C\uDFEF\uD83C\uDFA1\uD83C\uDFA2\uD83C\uDFA0\uD83C\uDF0B\uD83C\uDF07\uD83C\uDF06\uD83C\uDF03\");\r\n  const evidence = splitEmojis(\"\uD83E\uDE93\uD83D\uDD2A\uD83C\uDF8E\uD83C\uDF80\uD83E\uDDFF\uD83E\uDDF8\uD83E\uDDF5\uD83D\uDCFF\uD83D\uDC8E\uD83D\uDCF1\uD83D\uDCBE\uD83D\uDCC0\uD83D\uDCFC\uD83D\uDD26\uD83D\uDCD3\uD83D\uDCD2\uD83D\uDCB5\u270F\uFE0F\uD83D\uDD8B\uFE0F\uD83D\uDD8C\uFE0F\uD83D\uDDC2\uFE0F\u2702\uFE0F\uD83D\uDD13\uD83D\uDDE1\uFE0F\uD83D\uDD11\uD83D\uDDDD\uFE0F\uD83D\uDD27\u2699\uFE0F\uD83D\uDC89\uD83E\uDE92\uD83D\uDEAC\");\r\n  const documents = \"\uD83E\uDDE7\uD83D\uDCF0\uD83D\uDCC3\u2709\uFE0F\uD83E\uDDFE\"\r\n\r\n  const emojis = photos;\r\n    \r\n\r\n  const words = Object.keys(window).filter(w=>w.length<10);\r\n  const cards: HTMLElement[] = [];\r\n\r\n  function randomText(len: number = 0) {    \r\n    return len?[...new Array(len)].map(v => randomElement(words)).join(\" \"):\"\"\r\n  }\r\n\r\n  let slotn = 0;\r\n  let board = [], free = [];\r\n\r\n  function addSlot(card, parent: HTMLElement = Board) {\r\n    let slot = document.createElement(\"div\")\r\n    slot.classList.add(\"slot\");\r\n    slot.id = slotn++ as any;\r\n    makeDroppable(slot);\r\n    parent.appendChild(slot);\r\n    if (card) {\r\n      addCard(slot, card)\r\n      board.push(card);\r\n    }\r\n  }\r\n\r\n  let preventDoubleDrop = false;\r\n\r\n  function makeDroppable(slot) {\r\n    slot.ondragover = e => e.preventDefault();\r\n    slot.ondrop = e => {\r\n      e.preventDefault();\r\n      if (preventDoubleDrop) {\r\n        preventDoubleDrop = false;\r\n        return;\r\n      }\r\n      let data = e.dataTransfer.getData(\"text\");\r\n      console.log(\"drop\", slot.id, data);\r\n      if (slot.id != \"Table\")\r\n        preventDoubleDrop = true;\r\n      let card = document.getElementById(data) as HTMLDivElement;\r\n      moveCard(card, slot, e.screenX, e.screenY);\r\n    }\r\n  }\r\n\r\n  function moveCard(card: HTMLDivElement, slot: HTMLDivElement, x, y) {\r\n    if (slot.id != \"Table\" && slot.childNodes.length > 0) {\r\n      let other = slot.childNodes[0] as HTMLDivElement;\r\n      card.parentElement.appendChild(other);\r\n      other.style.left = card.style.left;\r\n      other.style.top = card.style.top;\r\n    }\r\n    slot.appendChild(card);\r\n    card.style.left = `${x - card.getBoundingClientRect().width / 2}px`;\r\n    card.style.top = `${y - card.getBoundingClientRect().height}px`;\r\n    relink();\r\n  }\r\n\r\n  function addCard(slot: HTMLDivElement, {photo, type}) {\r\n    type = type||\"po\";\r\n    let card = document.createElement(\"div\")\r\n    slot.appendChild(card)\r\n    cards.push(card);\r\n    card.classList.add(\"card\", type);\r\n    card.style.transform = `translate(${rng() * 10 - 5}px, ${rng() * 10 - 5}px) rotate(${rng() * 6 - 3}deg)`\r\n    card.style.width = type==\"np\"?`${rng()*2+4}em`:type==\"nt\"?`${rng()*3+3}em`:\"\";\r\n    card.draggable = true;\r\n    card.id = photo;\r\n    card.ondragstart = e => e.dataTransfer.setData(\"text\", photo);\r\n    card.onmouseenter = () => highlightNeighbors(card);\r\n    card.onmouseleave = () => highlightNeighbors(null);\r\n    let words = {po:3, np:150, nt:3}[type] || 0;\r\n    let title = {np:1}[type] || 0;\r\n    let columns = {np:rng(2)+1}[type];\r\n    let float = type==\"np\" && randomElement([\"left\",\"right\", \"center\"]);\r\n    let style = `\"\r\n      background:hsl(${rng(360)}, 50%, 10%); \r\n      float: ${float}; ${float==\"center\" && \"width:100%;\"}\r\n    \"`;\r\n    card.innerHTML = `<div class=\"note\" style=\"columns: ${columns};\">\r\n      <h1>${randomText(rng(title) + title)}</h1>\r\n      <div class=\"photo\" style=${style}>\r\n      ${photo}\r\n      </div>\r\n      <span>${randomText(rng(~~(words/3)) + words)}</span>\r\n    </div>`;\r\n    card.style.background = `hsl(${rng(360)}, 20%, 95%)`;\r\n    board[slot.id] = card.id;\r\n  }\r\n\r\n  function highlightNeighbors(card) {\r\n    for (let c of cards) {\r\n      c.classList.remove(\"hl\");\r\n    }\r\n    if (card)\r\n      for (let l of links) {\r\n        let connected = l[0] == card ? l[1] : l[1] == card ? l[0] : null;\r\n        if (connected)\r\n          connected.classList.add(\"hl\")\r\n      }\r\n  }\r\n\r\n  function toPath(linksAt, dy = 0) {\r\n    return linksAt.map(([ap, bp]) => {\r\n      ap = [ap[0], ap[1] + dy];\r\n      bp = [bp[0], bp[1] + dy];\r\n      let cp = [ap[0] / 2 + bp[0] / 2, ap[1] / 2 + bp[1] / 2 + Math.min(100, Math.abs(ap[0] - bp[0]) * 0.3)];\r\n      return `M${ap[0]} ${ap[1]} Q${cp[0]} ${cp[1]} ${bp[0]} ${bp[1]}`\r\n    });\r\n  }\r\n\r\n  function relink() {\r\n    let linksAt = links.map(([a, b]) => [bat(a, b), bat(b, a)]);\r\n\r\n    Pins.innerHTML = linksAt.flat(1).map(([x, y]) => \r\n      `<div class=\"pin\" style=\"left:${x - 3}px;top:${y - 7}px\">\uD83D\uDCCD</div>`\r\n    ).join(\" \");\r\n\r\n    StringsPath.setAttribute(\"d\", toPath(linksAt).join(\" \"));\r\n  }\r\n\r\n\r\n  makeDroppable(Table)\r\n\r\n  let shuffled = shuffle(emojis, rng);\r\n  for (let photo of shuffled.slice(0, 72) as any as [number, string][]) {\r\n    addSlot(rng(2) ? {photo, type:randomElement([\"po\",\"np\",\"nt\"])} : null);\r\n  }\r\n\r\n  let links: HTMLDivElement[][] = [];\r\n  for (let i = 0; i < cards.length; i++) {\r\n    let c1 = cards[i];\r\n    let c2 = randomElement(cards);\r\n    if (c1 != c2 && !links.find(l => l[0] == c1 && l[1] == c2))\r\n      links.push([c1, c2]);\r\n  }\r\n\r\n  relink();\r\n\r\n  function bat(div, other) {\r\n    let margin = 10;\r\n    let r = div.getBoundingClientRect();\r\n    let o = other.getBoundingClientRect();\r\n    return [\r\n      o.left > r.left + 10 ? r.right - margin : r.left + margin,\r\n      o.top > r.top + 10 ? r.bottom - margin : r.top + margin\r\n    ];\r\n  }\r\n\r\n  function curve(a:V2, b:V2, c:V2, t:number) {\r\n    let v = (1 - t) ** 2, w = t ** 2\r\n    return [c.x + v * (a.x - c.x) + w * (b.x - c.x), c.y + v * (a.y - c.y) + w * (b.y - c.y)]\r\n  }\r\n\r\n  function topLeft(d: HTMLElement) {\r\n    let br = d.getBoundingClientRect();\r\n    return `${~~br.left + 10} ${~~br.top + 10}`\r\n  }\r\n}"],
  "mappings": "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",
  "names": ["rng", "RNG", "seed", "rngi", "randomElement", "list", "gen", "shuffle", "arr", "l", "i", "r", "emogiRegEx", "splitEmojis", "t", "emogiRegEx", "randomText", "len", "v", "randomElement", "words", "addSlot", "card", "parent", "slot", "slotn", "makeDroppable", "addCard", "board", "e", "preventDoubleDrop", "data", "moveCard", "x", "y", "other", "relink", "photo", "type", "cards", "rng", "highlightNeighbors", "title", "columns", "float", "style", "c", "l", "links", "connected", "toPath", "linksAt", "dy", "ap", "bp", "cp", "a", "b", "bat", "div", "margin", "r", "o", "curve", "w", "topLeft", "d", "br", "RNG", "update", "photos", "places", "evidence", "documents", "emojis", "free", "shuffled", "shuffle", "i", "c1", "c2"]
}
